package services.book.data;
// Generated Oct 28, 2015 11:29:04 AM by Hibernate Tools 4.3.1.Final

import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;
import java.util.Collection;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "Book")
@NamedQueries({
		@NamedQuery(name = "Book.findAll", query = "SELECT b FROM Book b"),
		@NamedQuery(name = "Book.findById",
				query = "SELECT b FROM Book b WHERE b.isbn = :id"),
		@NamedQuery(name = "Book.findByName",
				query = "SELECT b FROM Book b WHERE b.name = :name"),
		@NamedQuery(name = "Book.findByAuthors",
				query = "SELECT b FROM Book b WHERE b.bookAuthors = :actors")})
public class Book implements java.io.Serializable {

	
	@Id
	@Column(name = "ISBN", unique = true, nullable = false)
	private long isbn;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Condition")
	private Condition condition;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SellOption")
	private SellOption sellOption;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "User")
	private User user;
	
	@Column(name = "Name", nullable = false, length = 300)
	private String name;


	@Column(name = "Description", length = 1000)
	private String description;
	
	@Column(name = "Price", precision = 22, scale = 0)
	private Double price;
	
	 @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	     @JoinTable(name = "Book_Author", joinColumns = {
	         @JoinColumn(name = "ISBN", nullable = false, updatable = false) },
	             inverseJoinColumns = { @JoinColumn(name = "ID_Author",
	             nullable = false, updatable = false) })
	private Collection<Author> bookAuthors;

	public Book() {
	}

	public Book(long isbn, String name) {
		this.isbn = isbn;
		this.name = name;
	}

	public Book(long isbn, Condition condition, SellOption sellOption, User user, String name, String description,
				Double price) {
		this.isbn = isbn;
		this.condition = condition;
		this.sellOption = sellOption;
		this.user = user;
		this.name = name;
		this.description = description;
		this.price = price;
	}



	public long getIsbn() {
		return this.isbn;
	}

	public void setIsbn(long isbn) {
		this.isbn = isbn;
	}


	public Condition getCondition() {
		return this.condition;
	}

	public void setCondition(Condition condition) {
		this.condition = condition;
	}


	public SellOption getSellOption() {
		return this.sellOption;
	}

	public void setSellOption(SellOption sellOption) {
		this.sellOption = sellOption;
	}


	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}


	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}


	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	
	public Double getPrice() {
		return this.price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public Collection<Author> getBookAuthors() {
		return bookAuthors;
	}

	@JsonIgnore
	public void setBookAuthors(Collection<Author> bookAuthors) {
		this.bookAuthors = bookAuthors;
	}
	
	

}
